import telebot # —Å–∞–º–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ telebot
import time # –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è c—Ä–æ–∫–∞ /mute –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–º—É—Ç–∞ –ø–æ—Å–ª–µ —Å—Ä–æ–∫–∞ –º—É—Ç–∞
import random
import openai
openai.api_key = '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'
bot = telebot.TeleBot("6300333526:AAHSM9qd0V9cT6qOnRHULwiR9bKtF9GtWlw") # –≤ TOKEN –º—ã –≤–≤–æ–¥–∏–º –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å–∞–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω.
stats = {}
marrypos = [1 , 3 , 5 , 7 , 9]
marrypos1 = [0 , 2 , 4, 6 , 8]
kids = []
boy = [
    '–∞–±—Å–æ—Å',
    '–∞–≤–∞–∑',
    '–ê–õ–ï–ö–°–ê–ù–î–†',
    '—Å–µ—Ä–ì–ï–ô',
    '–í–∞—Å–∏–ª–∏–π',
    '–∞—Ä–≤–∏–¥–∏–∫',
    '–æ–ª–µ–≥',
    '–∞–±–∏–±–æ—Å',
    '–≠–≥–µ–π',
    '–º–∏—Å—Ç–∞',
    '–∞–ª–∏',
    '–∫–∏–º –ø–∞–∫ —á–∏–º–∏–Ω',
    '—ç–≤–µ—Ä–Ω–∞—Å—Ä–∞–ª',
    '–º–∞–ª–µ–Ω—å–∫–∏–π –ø–µ–¥–∏–∫',
    '—Å—ã–Ω –ø–∏–¥–æ—Ä–∞—Å–æ–≤',
    '–∞–Ω–∞–ª–∏–∫',
    '–º–∞–ª–µ–Ω—å–∫–∏—Ö—É–π',
    '–Ω–µ–≥—Ä–∏–∫',
    '—Ä–∞–±–∏–∫',
    '–≥–∏—Ç–ª–µ—Ä'
]
bad_words = ['—Ä–∞—Å—Å—Ç—Ä–µ–ª—è—Ç—å', '—Å—Å—ã–ª–∫–∞', '–ª–æ—Ö', '–æ–ª–µ–≥', '–∞–ª–µ–∫', '–∏–∑—Ä–∞–∏–ª—å' , '–Ω–∞—Ö—É–π' , '—Ö—É–π', '–∑–∞–µ–±–∞–ª' , '–∫–∏—Ç–∞–π—Å–∫–∏–π' , '–µ–±–µ—Ç']
married = []

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –µ–±—ë—Ç –º–∞—Å—Ä—É—Ä–∞. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.")

@bot.message_handler(commands=['help'])
def help(message):
    bot.reply_to(message, "/kick - –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/mute - –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è\n/unmute - —Ä–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞\n/selfstat - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")

@bot.message_handler(commands=['marry', '–±—Ä–∞–∫'])
def marry(message):
    if (message.reply_to_message.from_user.username not in married) and (message.from_user.first_name not in married):
        married.append(message.from_user.first_name)
        married.append(message.reply_to_message.from_user.first_name)
        bot.send_message(message.chat.id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –º–æ–ª–æ–¥–æ–∂—ë–Ω, {message.reply_to_message.from_user.first_name} –∏ {message.from_user.first_name} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –ø–æ–∂–µ–Ω–∏–ª–∏—Å—å")
    else:
        bot.send_message(message.chat.id, '–±—Ä–∞–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–∫–ª—é—á—ë–Ω —Ç–∞–∫ –∫–∞–∫ –æ–¥–Ω–∞ –∏–∑ —Å—Ç–æ—Ä–æ–Ω —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±—Ä–∞–∫–µ')

@bot.message_handler(commands=['married', '–±—Ä–∞–∫–∏'])
def marrie(message):
    for i in range (0,len(married),2):
        bot.send_message(message.chat.id, f"{married[i]} and {married[i+1]}")

@bot.message_handler(commands=['fuck_wife', '–≤—ã–µ–±–∞—Ç—å_–∂–µ–Ω—É'])
def fuck_wife(message):
    if (message.from_user.first_name in married) and (message.reply_to_message.from_user.first_name in married):
        index1 = married.index(message.from_user.first_name)
        index2 = married.index(message.reply_to_message.from_user.first_name)
        if (index1 in marrypos) and (index2 in marrypos1):
            if index1-index2 == 1:
                a = random.randint(1,10)
                if a == 5: 
                    b = random.randint(1,len(boy))
                    bot.send_message(message.chat.id, f"–ü–æ–∑–¥—Ä–æ–≤–ª—è–µ–º {message.reply_to_message.from_user.first_name} –∏ {message.from_user.first_name} —Å –º–∞–ª—å—á–∏–∫–æ–º")
                elif a == 8:
                    b = random.randint(1,len(boy))
                    bot.send_message(message.chat.id, f"–ü–æ–∑–¥—Ä–æ–≤–ª—è–µ–º {message.reply_to_message.from_user.first_name} –∏ {message.from_user.first_name} —Å –¥–µ–≤–æ—á–∫–æ–π")   
                else:
                    bot.send_message(message.chat.id, f"–≤–∏–¥–∏–º–æ {message.from_user.first_name} –Ω–µ —Ç–∞–∫ —Å–∏–ª—å–Ω–æ —Å—Ç–∞—Ä–∞–ª—Å—è")
            else:
                bot.send_message(message.chat.id, f"{message.reply_to_message.from_user.first_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞—à–µ–π –∂–µ–Ω–æ–π")
        elif (index2 in marrypos) and (index1 in marrypos1):
            if index2-index1 == 1:
                married.pop(index1)
                married.pop(index2-1)
                bot.send_message(message.chat.id, f"–ö–∞–∫ –±—ã —Å–ª–æ–∂–Ω–æ —ç—Ç–æ –±—ã –Ω–µ –±—ã–ª–æ –Ω–æ —Ñ–∞–∫—Ç –µ—Å—Ç—å —Ñ–∞–∫—Ç, {message.reply_to_message.from_user.first_name} –∏ {message.from_user.first_name} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —Ä–∞—Å—Ç–∞–ª–∏—Å—å üíî")  


@bot.message_handler(commands=['divorce', '—Ä–∞–∑–≤–æ–¥'])
def divorc(message):
    if (message.from_user.first_name in married) and (message.reply_to_message.from_user.first_name in married):
        index1 = married.index(message.from_user.first_name)
        index2 = married.index(message.reply_to_message.from_user.first_name)
        if (index1 in marrypos) and (index2 in marrypos1):
            if index1-index2 == 1:
                married.pop(index1)
                married.pop(index2)
                bot.send_message(message.chat.id, f"–ö–∞–∫ –±—ã —Å–ª–æ–∂–Ω–æ —ç—Ç–æ –±—ã –Ω–µ –±—ã–ª–æ –Ω–æ —Ñ–∞–∫—Ç –µ—Å—Ç—å —Ñ–∞–∫—Ç, {message.reply_to_message.from_user.first_name} –∏ {message.from_user.first_name} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —Ä–∞—Å—Ç–∞–ª–∏—Å—å üíî")
            else:
                bot.send_message(message.chat.id, f"{message.reply_to_message.from_user.first_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞—à–µ–π –∂–µ–Ω–æ–π")
        elif (index2 in marrypos) and (index1 in marrypos1):
            if index2-index1 == 1:
                married.pop(index1)
                married.pop(index2-1)
                bot.send_message(message.chat.id, f"–ö–∞–∫ –±—ã —Å–ª–æ–∂–Ω–æ —ç—Ç–æ –±—ã –Ω–µ –±—ã–ª–æ –Ω–æ —Ñ–∞–∫—Ç –µ—Å—Ç—å —Ñ–∞–∫—Ç, {message.reply_to_message.from_user.first_name} –∏ {message.from_user.first_name} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —Ä–∞—Å—Ç–∞–ª–∏—Å—å üíî")
            else:
                bot.send_message(message.chat.id, f"{message.reply_to_message.from_user.first_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞—à–µ–π –∂–µ–Ω–æ–π")
        else:
            bot.send_message(message.chat.id, f"{message.reply_to_message.from_user.first_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞—à–µ–π –∂–µ–Ω–æ–π")    
    else:
        bot.send_message(message.chat.id, f"{message.reply_to_message.from_user.first_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞—à–µ–π –∂–µ–Ω–æ–π")           

@bot.message_handler(commands=['kick'])
def kick_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.kick_chat_member(chat_id, user_id)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –±—ã–ª –∫–∏–∫–Ω—É—Ç.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å.")

@bot.message_handler(commands=['masrur', '–º–∞—Å—Ä—É—Ä'])
def welcome(message):
    mesg = bot.send_message(message.chat.id,'–≤—ã –≤–∫–ª—é—á–∏–ª–∏ masrurgpt ')
    bot.register_next_step_handler(mesg,chatgpt)


def chatgpt(message):
    response = openai.Completion.create(
        model = 'text-davinci-003',
        prompt = message.text,
        temperature = 0.5,
        max_tokens = 1000,
        top_p = 1.0,
        frequency_penalty = 0.5,
        presence_penalty = 0.5
    )
    gpt_text = response['choices'][0]['text']
    bot.send_message(message.chat.id, gpt_text)


@bot.message_handler(commands=['mute'])
def mute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            duration = 60 # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - 1 –º–∏–Ω—É—Ç–∞
            args = message.text.split()[1:]
            if args:
                try:
                    duration = int(args[0])
                except ValueError:
                    bot.reply_to(message, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.")
                    return
                if duration < 1:
                    bot.reply_to(message, "–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                    return
                if duration > 1440:
                    bot.reply_to(message, "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è - 1 –¥–µ–Ω—å.")
                    return
            bot.restrict_chat_member(chat_id, user_id, until_date=time.time()+duration*60)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration} –º–∏–Ω—É—Ç.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å.")

@bot.message_handler(commands=['unmute'])
def unmute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        bot.restrict_chat_member(chat_id, user_id, can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True)
        bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} —Ä–∞–∑–º—É—á–µ–Ω.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å.")

@bot.message_handler(commands=['stats'])
def chat_stats(message):
    chat_id = message.chat.id
    if chat_id not in stats:
        bot.reply_to(message, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞ –ø—É—Å—Ç–∞.")
    else:
        total_messages = stats[chat_id]['total_messages']
        unique_users = len(stats[chat_id]['users'])
        bot.reply_to(message, f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞:\n–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_messages}\n–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}")

@bot.message_handler(commands=['mention', '—É–ø–æ–º—è–Ω—É—Ç—å'])
def mention(message):
    bot.send_message(message.chat.id, "@CurlyFromMSU @kataki_kamitu_kashi @alkash3001 @anxxlrw @T1murxgod @just_madd @Sie_Johan @vxmever")

@bot.message_handler(commands=['selfstat'])
def user_stats(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    username = message.from_user.username
    if chat_id not in stats:
        bot.reply_to(message, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞ –ø—É—Å—Ç–∞.")
    else:
        if user_id not in stats[chat_id]['users']:
            bot.reply_to(message, "–í—ã –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")
        else:
            user_messages = stats[chat_id]['users'][user_id]['messages']
            total_messages = stats[chat_id]['total_messages']
            percentage = round(user_messages / total_messages * 100, 2)
            bot.reply_to(message, f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}:\n–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {user_messages}\n–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: {percentage}%")


@bot.message_handler()
def fuck(message):
    if message.text.lower() == 'fuck' or message.text.lower() == '–≤—ã–µ–±–∞—Ç—å':
        a = random.randint(1,3) 
        if a == 1:
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.first_name} –±—ã–ª –∏–∑–Ω–æ—Å–∏–ª–æ–≤–∞–Ω")
        elif a == 2:
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.first_name} –±—ã–ª –∏–∑–Ω–æ—Å–∏–ª–æ–≤–∞–Ω –≤ –∂–æ–ø—É")
        elif a == 3:
            bot.reply_to(message, f"{message.reply_to_message.from_user.first_name} –Ω–µ –ø–æ–≤–µ–∑–ª–æ –µ–≥–æ –∫–æ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –∏ –≤–µ–±–∞–ª–∏ –µ–≥–æ –∂–µ –ø–µ–Ω–∏—Å–æ–º")
    elif message.text.lower() == "fuck easy" or message.text.lower() == "–≤—ã–µ–±–∞—Ç—å —Å–ª–∞–±–æ":
        bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.first_name} –±—ã–ª –∏–∑–Ω–æ—Å–∏–ª–æ–≤–∞–Ω")
    elif message.text.lower() == "fuck medium" or message.text.lower() == "–≤—ã–µ–±–∞—Ç—å —Å—Ä–µ–¥–Ω–µ":
        bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.first_name} –±—ã–ª –∏–∑–Ω–æ—Å–∏–ª–æ–≤–∞–Ω –≤ –∂–æ–ø—É")
    elif message.text.lower() == 'fuck hard' or message.text.lower() == '–≤—ã–µ–±–∞—Ç—å –∂–µ—Å—Ç–∫–æ':
        bot.reply_to(message, f"{message.reply_to_message.from_user.first_name} –Ω–µ –ø–æ–≤–µ–∑–ª–æ –µ–≥–æ –∫–æ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –∏ –≤–µ–±–∞–ª–∏ –µ–≥–æ –∂–µ –ø–µ–Ω–∏—Å–æ–º")

bot.polling(none_stop=True) #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å